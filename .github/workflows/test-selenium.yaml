name: Test Management UI with Selenium
on:
  push:
    branches:
    - pjk25/oidc-integration-github-action
jobs:
  selenimum:
    runs-on: ubuntu-latest
    #! container:
    #!   image: node:16
    services:
      selenium:
        image: selenium/standalone-${{ matrix.browser }}
        ports:
        - 4444:4444
    strategy:
      fail-fast: false
      matrix:
        erlang_version:
        - "24"
        browser:
        - chrome
        include:
        - erlang_version: "24"
          elixir_version: 1.12.3
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure OTP & Elixir
      uses: erlef/setup-beam@v1.12
      with:
        otp-version: ${{ matrix.erlang_version }}
        elixir-version: ${{ matrix.elixir_version }}

    - name: Mount Bazel Cache
      uses: actions/cache@v3.0.8
      with:
        path: "/home/runner/repo-cache/"
        key: repo-cache

    - name: Configure Bazel
      run: |
        if [ -n "${{ secrets.BUILDBUDDY_API_KEY }}" ]; then
        cat << EOF >> user.bazelrc
          build:buildbuddy --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_API_KEY }}
        EOF
        fi
        cat << EOF >> user.bazelrc
          build:buildbuddy --build_metadata=ROLE=CI
          build:buildbuddy --build_metadata=VISIBILITY=PUBLIC
          build:buildbuddy --repository_cache=/home/runner/repo-cache/
          build:buildbuddy --color=yes
          build:buildbuddy --disk_cache=
        EOF

        bazelisk info release

    - name: Start Backgroung Broker
      run: |
        bazelisk run --config=local :rabbitmq-run \
          start-background-broker

    - uses: actions/setup-node@v2
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: deps/rabbitmq_management/selenium/package.json

    - name: npm install
      working-directory: deps/rabbitmq_management/selenium
      run: npm i

    - name: Test
      env:
        BROWSER: ${{ matrix.browser }}
        RABBITMQ_URL: http://localhost:15672
      working-directory: deps/rabbitmq_management/selenium
      run: npm run test

    #! - name: Build mocha-test
    #!   run: |
    #!     cd deps/rabbitmq_management/selenium
    #!     make init-tests
    #!     docker images | grep mocha-test
    #! - name: Call mocha-test
    #!   run: |
    #!     cd deps/rabbitmq_management/selenium
    #!     source bin/rabbitmq.sh
    #!     echo "running RabbitMQ..."
    #!     RABBITMQ_CONFIG=$PWD/test/oauth/with-uaa/rabbitmq.config start_rabbitmq
    #!     sleep 5
    #!     docker exec -it local-rabbitmq rabbitmqctl await_startup
    #!     make run-tests


####
# We need to run these as docker images:
#  UAA
#  RabbitMQ
#  Selenium Tests (maybe these ones could run in the host machine)
#  Selenium Hub (which runs the browser in silent mode)

# The workflow is more or less like this:
# job:build-rabbitmq-image  -> job:build-test-runner-image -> job:run-tests

# job:build-rabbitmq-image : Ideally, we do not want to push it. can we do that in github actions?
#
# job:run-tests : It runs within a container and it uses these services:
#  - rabbitmq
#  - UAA
#  - selenium-hub
# and it has this step which uses the image test-runner built by the job build-test-runner-image
